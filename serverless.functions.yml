functions:
  slackPostCodeBuildStatus:
    handler: index.handler
    events: ${file(serverless.custom.yml):codeBuildStatusEvent}
    package:
      artifact: 'services/slack-post/dist/dist_slack_post.zip'
    role: sendSlackRole
    layers:
      - ${env:AXIOS_LAYER_VERSION}
    environment:
      SLACK_POST_METADATA_BUCKET_NAME: ${env:SLACK_POST_METADATA_BUCKET_NAME}
      SLACK_POST_METADATA_FILE_NAME: ${env:SLACK_POST_METADATA_FILE_NAME}
      SLACK_POST_TEMPLATE_PATH: './Template_CodeBuild.json'
      SLACK_POST_CHANNEL: ${env:SLACK_POST_CHANNEL}
      SLACK_BOT_OAUTH_TOKEN: ${env:SLACK_BOT_OAUTH_TOKEN} # ${ssm:/codepipeline-actions/slack_bot_oauth_token~true} # ~true for SecuredString

  slackPostRelease:
    handler: index.handler
    events: ${file(serverless.custom.yml):slackPostReleaseEvent}
    package:
      artifact: 'services/slack-post/dist/dist_slack_post.zip'
    role: sendSlackRole
    layers:
      - ${env:AXIOS_LAYER_VERSION}
    environment:
      SLACK_POST_TEMPLATE_PATH: ${env:SLACK_POST_TEMPLATE_PATH}
      SLACK_POST_METADATA_BUCKET_NAME: ${env:SLACK_POST_METADATA_BUCKET_NAME}
      SLACK_POST_METADATA_FILE_NAME: ${env:SLACK_POST_METADATA_FILE_NAME}
      SLACK_POST_CHANNEL: ${env:SLACK_POST_CHANNEL}
      SLACK_BOT_OAUTH_TOKEN: ${env:SLACK_BOT_OAUTH_TOKEN} # ${ssm:/codepipeline-actions/slack_bot_oauth_token~true} # ~true for SecuredString

  codepipelineSlackRelease:
    handler: index.handler
    package:
      artifact: 'services/codepipeline-slack/dist/dist_codepipeline_slack.zip'
    role: processApprovalRole
    events: ${file(serverless.custom.yml):processApprovalSlackReleaseEvents}
    environment:
      CONDITION_BUCKET_NAME: ${env:CONDITION_BUCKET_NAME}
      CONDITION_FILENAME: ${env:CONDITION_FILENAME}
      REJECTED_BUCKET_NAME: ${env:REJECTED_BUCKET_NAME}
      REJECTED_FILE_NAME: ${env:REJECTED_FILE_NAME}
      CODEPIPELINE_INVOKE_LAMBDA_FUNCTION_NAME: ${env:CODEPIPELINE_INVOKE_LAMBDA_FUNCTION_NAME}
      SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET} # ${ssm:/codepipeline-actions/slack_signing_secret~true} # ~true for SecuredString

  slackUpdateRelease:
    handler: index.handler
    package:
      artifact: 'services/slack-update/dist/dist_slack_update.zip'
    role: sendSlackRole
    layers:
      - ${env:AXIOS_LAYER_VERSION}
    environment:
      SLACK_BOT_OAUTH_TOKEN: ${env:SLACK_BOT_OAUTH_TOKEN} # ${ssm:/codepipeline-actions/slack_bot_oauth_token~true} # ~true for SecuredString

  copyCandidate:
    handler: index.handler
    package:
      artifact: 'services/copy-object/dist/dist_copy_object.zip'
    role: copyObjectRole
    environment:
      OUTPUT_BUCKET_NAME: ${env:COPY_OBJECT_TARGET_BUCKET_NAME}
      OUTPUT_FILENAME: ${env:COPY_OBJECT_TARGET_FILE_NAME}

  codepipelineAutoQa:
    handler: index.handler
    package:
      artifact: 'services/codepipeline-auto/dist/dist_codepipeline_auto.zip'
    role: processApprovalRole
    events: ${file(serverless.custom.yml):autoQaApprovalEvent}
    environment:
      CONDITION_BUCKET_NAME: ${env:SLACK_POST_METADATA_BUCKET_NAME}
      CONDITION_FILENAME: qa_results.html
      CONDITION_METADATA_PROPERTY: qa_status
      CONDITION_METADATA_SUCCESS: success
      REJECTED_BUCKET_NAME: ''
      REJECTED_FILE_NAME: ''
      CODEPIPELINE_INVOKE_LAMBDA_FUNCTION_NAME: ${env:CODEPIPELINE_INVOKE_LAMBDA_FUNCTION_NAME}
