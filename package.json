{
  "name": "aws-codepipeline-actions",
  "version": "0.1.0",
  "author": "Meir Gabay <unfor19@gmail.com>",
  "license": "MIT",
  "devDependencies": {
    "@babel/core": "^7.7.2",
    "@babel/preset-env": "^7.7.1",
    "@babel/preset-typescript": "^7.7.2",
    "@types/jest": "^24.0.23",
    "@types/node": "^12.12.9",
    "@typescript-eslint/eslint-plugin": "^2.8.0",
    "@typescript-eslint/parser": "^2.8.0",
    "babel-jest": "^24.9.0",
    "copy-webpack-plugin": "^5.0.5",
    "eslint": "^6.7.0",
    "eslint-config-prettier": "^6.7.0",
    "eslint-plugin-prettier": "^3.1.1",
    "husky": ">=1",
    "jest": "^24.9.0",
    "libxmljs": "^0.19.7",
    "lint-staged": ">=8",
    "prettier": "^1.19.1",
    "serverless": "^1.60.4",
    "ts-jest": "^24.1.0",
    "ts-loader": "^6.2.1",
    "ts-node": "^8.5.2",
    "typescript": "^3.7.2",
    "webpack": "^4.41.2",
    "webpack-cli": "^3.3.10"
  },
  "scripts": {
    "docker:run": "docker-compose run --rm serverless",
    "docker:vault-run": "aws-vault exec cpa-prod -- docker-compose -f docker-compose.vault.yml run --rm serverless",
    "test:vault": "export $(cat .env) && aws-vault exec ${VAULT_PROFILE_TESTING} -- jest --detectOpenHandles",
    "test:vault-dist": "export $(cat .env) && aws-vault exec ${VAULT_PROFILE_TESTING} -- jest --detectOpenHandles --testNamePattern dist",
    "test:vault-dev": "export $(cat .env) && aws-vault exec ${VAULT_PROFILE_TESTING} -- jest --detectOpenHandles --testNamePattern dev",
    "test:vault-spec": "export $(cat .env) && aws-vault exec ${VAULT_PROFILE_TESTING} -- jest --detectOpenHandles --testNamePattern spec",
    "test:aws": "jest --detectOpenHandles",
    "installLayersDeps": "yarn install  && bash ./scripts/install_layers_deps",
    "installServicesDeps": "yarn install && bash ./scripts/install_services_deps",
    "installAllDeps": "yarn installLayersDeps && yarn installServicesDeps",
    "build:local": "export $(cat .env) && bash ./scripts/build_services",
    "build:codebuild": "bash ./scripts/build_services",
    "deploy:vault-dev": "export $(cat .env) && aws-vault exec ${VAULT_PROFILE_DEV} -- sls deploy --verbose --stage=dev --appname=${APP_NAME}",
    "deploy:vault-staging": "export $(cat .env) && aws-vault exec ${VAULT_PROFILE_STAGING} -- sls deploy --verbose --stage=staging --appname=${APP_NAME}",
    "deploy:vault-prod": "export $(cat .env) && aws-vault exec ${VAULT_PROFILE_PROD} -- sls deploy --verbose --stage=prod --appname=${APP_NAME}",
    "deploy:dev": "export $(cat .env) && sls deploy --verbose --stage=dev --appname=${APP_NAME}",
    "deploy:staging": "export $(cat .env) && sls deploy --verbose --stage=staging --appname=${APP_NAME}",
    "deploy:prod": "export $(cat .env) && sls deploy --verbose --stage=prod --appname=${APP_NAME}",
    "destroy:vault-dev": "export $(cat .env) && aws-vault exec ${VAULT_PROFILE_DEV} -- sls remove --verbose --stage=dev --appname=${APP_NAME}",
    "destroy:vault-staging": "export $(cat .env) && aws-vault exec ${VAULT_PROFILE_STAGING} -- sls remove --verbose --stage=staging --appname=${APP_NAME}",
    "destroy:vault-prod": "export $(cat .env) && aws-vault exec ${VAULT_PROFILE_PROD} -- sls remove --verbose --stage=prod --appname=${APP_NAME}",
    "destroy:dev": "sls remove --verbose --stage=dev --appname=${APP_NAME}",
    "destroy:staging": "sls remove --verbose --stage=staging --appname=${APP_NAME}",
    "destroy:prod": "sls remove --verbose --stage=prod --appname=${APP_NAME}",
    "zip:build": "bash ./scripts/zipping_build"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ],
    "*.ts": [
      "eslint --fix",
      "git add"
    ]
  }
}
