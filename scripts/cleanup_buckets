#!/bin/bash
exists_bucket () {
    local bucket_name=$1
    aws s3api head-bucket --bucket "$bucket_name" 2>/dev/null;
    echo $?
}

list_buckets_filter () {
    local filter=${1}
    buckets_list=$(aws s3api list-buckets)
    arr_string=$(echo "${buckets_list}" | jq --arg str "${filter}" -cr '.Buckets[] | select (.Name|test($str)) | .Name' | tr ' ' '\n')
    echo "${arr_string}"
}

delete_bucket() {
    bucket_name=$1
    bucket_exists=$(exists_bucket "$bucket_name")
    if [[ bucket_exists -eq 0 ]]; then
        aws s3api delete-bucket --bucket $bucket_name \
            --region $AWS_REGION
        if [[ $? -eq 0 ]]; then
            echo "\nSuccessfully deleted the bucket: $bucket_name"
        else
            echo "\nFailed to delete the bucket: $bucket_name"
        fi
    else
        echo "\nNULL BUCKET: $bucket_name"
    fi
}

delete_buckets () {
    local filter=${1}
    buckets_list=$(aws s3api list-buckets)
    arr_string=$(echo "${buckets_list}" | jq --arg str "${filter}" -cr '.Buckets[] | select (.Name|test($str)) | .Name' | tr ' ' '\n')
    arr=($(echo $arr_string))
    # Returns the first options that it found
    for bucket_name in "${arr[@]}"; do
        result=$(delete_bucket $bucket_name)
        printf "${result}"
    done
}

filters_list=("${APP_NAME}-cpa-.*-${STAGE}")


echo "The following buckets will be deleted: "
count_buckets=0
for filter in "${filters_list[@]}"; do
    buckets_list=$(list_buckets_filter "${filter}")
    if [[ ! -z $buckets_list ]]; then
        printf "$buckets_list\n"
        count_buckets=($echo $(($count_buckets+1)))
    fi
done

if [[ $count_buckets == 0 ]]; then
    echo "No buckets to delete, aborting ..."
    exit
fi

echo -n "Are you sure? (yes/no): "
read answer
if [[ $answer != "yes" ]]; then
    echo "Aborting ... "
    exit
else
    echo "Deleting buckets ..."
    for filter in "${filters_list[@]}"; do
        delete_buckets "${filter}"
    done
fi
